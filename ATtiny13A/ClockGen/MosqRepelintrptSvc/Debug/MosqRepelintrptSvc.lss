
MosqRepelintrptSvc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000005c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000011c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003b5  00000000  00000000  0000014c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000035c  00000000  00000000  00000501  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f0  00000000  00000000  0000085d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000a50  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000029b  00000000  00000000  00000a94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00000d2f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	1b d0       	rcall	.+54     	; 0x54 <main>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <init>:
  22:	81 b7       	in	r24, 0x31	; 49
  24:	85 50       	subi	r24, 0x05	; 5
  26:	81 bf       	out	0x31, r24	; 49
  28:	88 e8       	ldi	r24, 0x88	; 136
  2a:	86 bd       	out	0x26, r24	; 38
  2c:	16 bc       	out	0x26, r1	; 38
  2e:	b8 9a       	sbi	0x17, 0	; 23
  30:	b9 98       	cbi	0x17, 1	; 23
  32:	ba 98       	cbi	0x17, 2	; 23
  34:	bb 98       	cbi	0x17, 3	; 23
  36:	12 be       	out	0x32, r1	; 50
  38:	1f bc       	out	0x2f, r1	; 47
  3a:	13 be       	out	0x33, r1	; 51
  3c:	8f b5       	in	r24, 0x2f	; 47
  3e:	80 64       	ori	r24, 0x40	; 64
  40:	8f bd       	out	0x2f, r24	; 47
  42:	8f b5       	in	r24, 0x2f	; 47
  44:	82 60       	ori	r24, 0x02	; 2
  46:	8f bd       	out	0x2f, r24	; 47
  48:	83 b7       	in	r24, 0x33	; 51
  4a:	85 60       	ori	r24, 0x05	; 5
  4c:	83 bf       	out	0x33, r24	; 51
  4e:	8c ed       	ldi	r24, 0xDC	; 220
  50:	86 bf       	out	0x36, r24	; 54
  52:	08 95       	ret

00000054 <main>:
  54:	e6 df       	rcall	.-52     	; 0x22 <init>
  56:	ff cf       	rjmp	.-2      	; 0x56 <main+0x2>

00000058 <_exit>:
  58:	f8 94       	cli

0000005a <__stop_program>:
  5a:	ff cf       	rjmp	.-2      	; 0x5a <__stop_program>
